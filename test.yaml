#AWSテンプレートのバージョン
AWSTemplateFormatVersion: '2010-09-09'
#テンプレートの説明
Description: AWS cloudformation test
#リソース定義
Resources: 
  #VPC
  VPC: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: CFVPC

  #サブネット
  Subnet2c: 
    Type: AWS::EC2::Subnet
    Properties: 
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: us-west-2c
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: CF-Subnet2c-public
  Subnet2d: 
    Type: AWS::EC2::Subnet
    Properties: 
      CidrBlock: 10.0.100.0/24
      AvailabilityZone: us-west-2d
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: CF-Subnet2d-DB

  #InternetGateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
      - Key: Name
        Value: CF-InternetGateway

  GatewayAttachment: 
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref VPC 
      InternetGatewayId: !Ref InternetGateway

  #RouteTable
  RouteTable: 
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: CF-Route
  RouteInternet: 
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref RouteTable
      GatewayId: !Ref InternetGateway
  RouteLocal: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2c

  #SecurityGroup
  SecurityGroupEC2: 
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: AWS Study EC2
        VpcId: !Ref VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 3000
            ToPort: 3000
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0
        Tags: 
          - Key: Name
            Value: CF-SecurityGroup-EC2
  SecurityGroupRDS: 
      Type: AWS::EC2::SecurityGroup
      Properties: 
        GroupDescription: AWS Study RDS
        VpcId: !Ref VPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !Ref SecurityGroupEC2
        SecurityGroupEgress:
          - IpProtocol: -1
            CidrIp: 0.0.0.0/0
        Tags: 
          - Key: Name
            Value: CF-SecurityGroup-RDS
  
  #IAMロール
  S3AccessRole:  
    Type: AWS::IAM::Role 
    Properties: 
      AssumeRolePolicyDocument:  
        Version: "2012-10-17"  
        Statement:   
          - Effect: Allow  
            Principal:   
              Service:   
                - "ec2.amazonaws.com"  
            Action:   
              - sts:AssumeRole  
      Path: "/"

  #IAMポリシー
  S3AccessPolicies:  
    Type: AWS::IAM::Policy  
    Properties:  
      PolicyName: s3access  
      PolicyDocument:  
        Version: '2012-10-17'  
        Statement:  
        - Effect: Allow  
          Action:  
            - "s3:ListAllMyBuckets"  
            - "s3:GetBucketLocation"  
          Resource: "arn:aws:s3:::*"  
        - Effect: Allow  
          Action: "*"  
          Resource:  
            - "arn:aws:s3:::takafumi-s3-002"  
            - "arn:aws:s3:::takafumi-s3-002/*"  
      Roles:  
      - !Ref S3AccessRole

  #IAMインスタンスプロファイルの記述(EC2インスタンスとロールを紐づける)
  S3AccessInstanceProfile:  
    Type: AWS::IAM::InstanceProfile  
    Properties:  
      Path: "/"  
      Roles:  
      - !Ref S3AccessRole

  #EC2
  EC2: 
    Type: AWS::EC2::Instance
    Properties: 
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      IamInstanceProfile:  !Ref S3AccessInstanceProfile
      ImageId: ami-0cb72367e98845d43
      InstanceType: t2.medium
      KeyName: takafumi-vpc
      Monitoring: false
      SubnetId: !Ref Subnet2c
      SecurityGroupIds:
        - !Ref SecurityGroupEC2
      Tags: 
        - Key: Name
          Value: CF-EC2

  #RDS
  RDS:
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBInstanceClass: db.t2.micro
      Port: 3306
      StorageType: gp2
      BackupRetentionPeriod: 1
      MasterUsername: root
      MasterUserPassword: rootroot
      PreferredBackupWindow: 15:00-16:00
      PreferredMaintenanceWindow: sun:18:00-sun:19:00
      DBName: MyDatabase
      Engine: mysql
      EngineVersion: 8.0.13
      LicenseModel: general-public-license
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups: 
        - !Ref SecurityGroupRDS
      Tags: 
        - Key: Name
          Value: CF-RDS
  DBSubnetGroup: 
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Created from the RDS Management Console
      SubnetIds: 
        - !Ref Subnet2c
        - !Ref Subnet2d

  #ELB
  ELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: aws-study-elb
      SecurityGroups:
        - !Ref SecurityGroupEC2
      Subnets:
        - !Ref Subnet2c
        - !Ref Subnet2d
      Tags:
        - Key: Name
          Value: aws-cf-elb
  ELBTargetGroup: 
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: aws-study-elb-target-group
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      Tags:
        - Key: Name
          Value: aws-study-elb-target-group
      Targets:
        - Id: !Ref EC2
          Port: 80
  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ELB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - TargetGroupArn: !Ref ELBTargetGroup
          Type: forward

  #S3
  S3Bucket: 
    Type: AWS::S3::Bucket
    Properties:
      BucketName: takafumi-s3-002
      AccessControl: Private
      Tags:
        - Key: Name
          Value: CF-S3bucket